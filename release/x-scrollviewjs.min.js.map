{"version":3,"sources":["x-scrollviewjs.min.js"],"names":["mix","old","newMixin","attr","hasOwnProperty","parseValue","value","length","undefined","trim","toLowerCase","isNaN","indexOf","parseFloat","parseInt","parseOptions","string","attrs","index","current","key","result","split","proto","Object","create","HTMLDivElement","prototype","createdCallback","refreshMthd","element","this","options","getAttribute","isInited","parentNode","scrollbar","scrollBar","ScrollViewJS","ScrollBar","className","direction","onScrollBefore","arguments","onScrollAfter","onScroll","setPosition","scroller","tracker","PointerWrapper","refresh","apply","_min","scroll","shift","duration","destroy","attachedCallback","detachedCallback","attributeChangedCallback","attrName","oldVal","newVal","document","registerElement","extends"],"mappings":"CAAC,WASA,QAASA,GAAIC,EAAKC,GACjB,GAAIC,EACJ,KAAKA,IAAQD,GACRA,EAASE,eAAeD,KAC3BF,EAAIE,GAAQD,EAASC,GAGvB,OAAOF,GAQR,QAASI,GAAWC,GACnB,IAAKA,EAAMC,OACV,MAAOC,OAERF,GAAQA,EAAMG,MACd,OAA4B,SAAxBH,EAAMI,eACF,EAEoB,UAAxBJ,EAAMI,eACF,EAEoB,SAAxBJ,EAAMI,cACF,KAEoB,cAAxBJ,EAAMI,cACFF,OAEJG,MAAML,GACFA,EAEmB,IAAvBA,EAAMM,QAAQ,KACVC,WAAWP,GAEZQ,SAASR,EAAO,IAQxB,QAASS,GAAaC,GACrB,GAAiBC,GAAOC,EAAOX,EAAQY,EAASC,EAA5CC,IACJ,KAAKL,IAAWA,EAAOT,OACtB,MAAOc,EAERJ,GAAQD,EAAOM,MAAM,IACrB,KAAKJ,EAAQ,EAAGX,EAASU,EAAMV,OAAgBA,EAARW,EAAgBA,GAAS,EAAG,CAClEC,EAAUF,EAAMC,GAAOI,MAAM,IAC7BF,GAAMD,EAAQ,GAAGV,MACbW,GAAIb,SACPc,EAAOD,GAAOf,EAAWc,EAAQ,KAGnC,MAAOE,GAnER,GAAIE,EAsEJA,GAAQC,OAAOC,OAAOC,eAAeC,UACrCJ,GAAMK,gBAAkB,WACvB,GAAoBC,GAAhBC,EAAUC,KACbC,EAAUjB,EAAagB,KAAKE,aAAa,WAC1C,KAAIF,KAAKG,UAAaH,KAAKI,WAA3B,CAGAJ,KAAKG,UAAW,CACZF,GAAQI,YACXL,KAAKM,UAAY,GAAIC,cAAaC,UAAUR,MAC3CS,UAAWR,EAAQI,UACnBK,UAAWT,EAAQS,WAAa,aAGlCT,GAAUhC,GAET0C,eAAgB,WACf,GAAIrB,IAAS,CACyB,mBAA3BS,GAAQY,iBAClBrB,EAASS,EAAQY,eAAeC,WAEjC,OAAOtB,IAERuB,cAAe,WACuB,kBAA1Bd,GAAQc,eAClBd,EAAQc,cAAcD,YAGxBE,SAAU,WACLf,EAAQO,WACXP,EAAQO,UAAUS,YAAYH,UAAU,GAET,mBAArBb,GAAQe,UAClBf,EAAQe,SAASF,aAGjBX,EACHD,MAAKgB,SAAW,GAAIT,cAAaP,KAAMC,EACvCD,MAAKiB,QAAU,GAAIV,cAAaW,eAAelB,KAAMA,KAAKgB,SAC1DlB,GAAcE,KAAKgB,SAASG,OAC5BnB,MAAKgB,SAASG,QAAU,WACvBrB,EAAYsB,MAAMrB,EAAQiB,SAAUJ,UAChCb,IAAWA,EAAQO,WACtBP,EAAQO,UAAUa,SAASpB,EAAQiB,SAASK,MAI9CrB,MAAKmB,QAAU,WACdnB,KAAKgB,SAASG,UAEfnB,MAAKsB,OAAS,SAAUC,EAAOC,GAC9BxB,KAAKgB,SAASM,OAAOC,EAAOC,GAE7BxB,MAAKyB,QAAU,WACdzB,KAAKgB,SAASS,SACdzB,MAAKiB,QAAQQ,YAGfjC,GAAMkC,iBAAmB,WACxB1B,KAAKmB,UAEN3B,GAAMmC,iBAAmB,YAEzBnC,GAAMoC,yBAA2B,SAAUC,EAAUC,EAAQC,IAE7D,OAAOC,UAASC,gBAAgB,kBAC/BC,UAAS,MACTtC,UAAWJ","file":"x-scrollviewjs.min.js","sourcesContent":["(function () {\n\tvar proto;\n\n\t/**\n\t * Extend first on object with second\n\t * @param {Object} old\n\t * @param {Object} newMixin\n\t * @return {Object}\n\t */\n\tfunction mix(old, newMixin) {\n\t\tvar attr;\n\t\tfor (attr in newMixin) {\n\t\t\tif (newMixin.hasOwnProperty(attr)) {\n\t\t\t\told[attr] = newMixin[attr];\n\t\t\t}\n\t\t}\n\t\treturn old;\n\t}\n\n\t/**\n\t * Parse value from string\n\t * @param {string} value\n\t * @return {*}\n\t */\n\tfunction parseValue(value) {\n\t\tif (!value.length) {\n\t\t\treturn undefined;\n\t\t}\n\t\tvalue = value.trim();\n\t\tif (value.toLowerCase() === 'true') {\n\t\t\treturn true;\n\t\t}\n\t\tif (value.toLowerCase() === 'false') {\n\t\t\treturn false;\n\t\t}\n\t\tif (value.toLowerCase() === 'null') {\n\t\t\treturn null;\n\t\t}\n\t\tif (value.toLowerCase() === 'undefined') {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (isNaN(value)) {\n\t\t\treturn value;\n\t\t}\n\t\tif (value.indexOf('.') !== 1) {\n\t\t\treturn parseFloat(value);\n\t\t}\n\t\treturn parseInt(value, 10);\n\t}\n\n\t/**\n\t * Parse string with options\n\t * @param {string} string\n\t * @return {Object}\n\t */\n\tfunction parseOptions(string) {\n\t\tvar result = {}, attrs, index, length, current, key;\n\t\tif (!string || !string.length) {\n\t\t\treturn result;\n\t\t}\n\t\tattrs = string.split(';');\n\t\tfor (index = 0, length = attrs.length; index < length; index += 1) {\n\t\t\tcurrent = attrs[index].split(':');\n\t\t\tkey = current[0].trim();\n\t\t\tif (key.length) {\n\t\t\t\tresult[key] = parseValue(current[1]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tproto = Object.create(HTMLDivElement.prototype);\n\tproto.createdCallback = function () {\n\t\tvar element = this, refreshMthd,\n\t\t\toptions = parseOptions(this.getAttribute('options'));\n\t\tif (this.isInited || !this.parentNode) {\n\t\t\treturn;\n\t\t}\n\t\tthis.isInited = true;\n\t\tif (options.scrollbar) {\n\t\t\tthis.scrollBar = new ScrollViewJS.ScrollBar(this, {\n\t\t\t\tclassName: options.scrollbar,\n\t\t\t\tdirection: options.direction || 'vertical'\n\t\t\t});\n\t\t}\n\t\toptions = mix({\n\t\t\t// Decorate onScroll methods\n\t\t\tonScrollBefore: function () {\n\t\t\t\tvar result = true;\n\t\t\t\tif (typeof element.onScrollBefore === 'function') {\n\t\t\t\t\tresult = element.onScrollBefore(arguments);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tonScrollAfter: function () {\n\t\t\t\tif (typeof element.onScrollAfter === 'function') {\n\t\t\t\t\telement.onScrollAfter(arguments);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonScroll: function () {\n\t\t\t\tif (element.scrollBar) {\n\t\t\t\t\telement.scrollBar.setPosition(arguments[1]);\n\t\t\t\t}\n\t\t\t\tif (typeof element.onScroll === 'function') {\n\t\t\t\t\telement.onScroll(arguments);\n\t\t\t\t}\n\t\t\t}\n\t\t}, options);\n\t\tthis.scroller = new ScrollViewJS(this, options);\n\t\tthis.tracker = new ScrollViewJS.PointerWrapper(this, this.scroller);\n\t\trefreshMthd = this.scroller.refresh;\n\t\tthis.scroller.refresh = function () {\n\t\t\trefreshMthd.apply(element.scroller, arguments);\n\t\t\tif (element && element.scrollBar) {\n\t\t\t\telement.scrollBar.refresh(-element.scroller._min);\n\t\t\t}\n\t\t};\n\t\t// Decorate scroll methods\n\t\tthis.refresh = function () {\n\t\t\tthis.scroller.refresh();\n\t\t};\n\t\tthis.scroll = function (shift, duration) {\n\t\t\tthis.scroller.scroll(shift, duration);\n\t\t};\n\t\tthis.destroy = function () {\n\t\t\tthis.scroller.destroy();\n\t\t\tthis.tracker.destroy();\n\t\t};\n\t};\n\tproto.attachedCallback = function () {\n\t\tthis.refresh();\n\t};\n\tproto.detachedCallback = function () {\n\t};\n\tproto.attributeChangedCallback = function (attrName, oldVal, newVal) {\n\t};\n\treturn document.registerElement('x-scrollviewjs', {\n\t\textends: 'div',\n\t\tprototype: proto\n\t});\n}());\n"],"sourceRoot":"/source/"}